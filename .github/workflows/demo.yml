name: Demo CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Basic validation
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install basic tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8
      
      - name: Check code formatting
        run: |
          black --check frontend-proxy/ recommendation-agent/ || {
            echo "❌ Code formatting issues found"
            echo "Run 'black frontend-proxy/ recommendation-agent/' to fix"
            exit 1
          }
      
      - name: Check import sorting  
        run: |
          isort --check-only frontend-proxy/ recommendation-agent/ || {
            echo "❌ Import sorting issues found"
            echo "Run 'isort frontend-proxy/ recommendation-agent/' to fix"
            exit 1
          }
      
      - name: Lint with flake8
        run: |
          flake8 frontend-proxy/ recommendation-agent/ --max-line-length=88 --extend-ignore=E203,W503
      
      - name: Validate Docker files exist
        run: |
          test -f frontend-proxy/Dockerfile || exit 1
          test -f recommendation-agent/Dockerfile || exit 1
          test -f mcp-toolbox/Dockerfile || exit 1
          echo "✅ All Dockerfiles found"
      
      - name: Validate Kubernetes files exist
        run: |
          test -f frontend-proxy/kubernetes.yaml || exit 1
          test -f recommendation-agent/kubernetes.yaml || exit 1
          test -f mcp-toolbox/kubernetes.yaml || exit 1
          test -f frontend-real-service.yaml || exit 1
          echo "✅ All Kubernetes files found"

  # Build validation (without pushing)
  build-test:
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        service: [frontend-proxy, recommendation-agent, mcp-toolbox]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Test Docker build for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: false
          tags: test/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max