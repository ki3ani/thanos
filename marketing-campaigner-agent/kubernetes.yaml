apiVersion: v1
kind: Service
metadata:
  name: marketing-campaigner-service
spec:
  type: ClusterIP
  selector:
    app: marketing-campaigner-agent
  ports:
  - port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marketing-campaigner-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marketing-campaigner-agent
  template:
    metadata:
      labels:
        app: marketing-campaigner-agent
    spec:
      serviceAccountName: mcp-toolbox-sa
      # ------------------------------------
      containers:
      - name: marketer
        image: us-central1-docker.pkg.dev/kims-boutique-472014/gke-hackathon-repo/marketing-campaigner-agent:v5
        ports:
        - containerPort: 8080
        env:
          - name: GOOGLE_API_KEY
            valueFrom:
              secretKeyRef:
                name: gemini-api-key
                key: key
          - name: DB_HOST
            value: "127.0.0.1"
          - name: DB_NAME
            value: "postgres"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: boutique-db-credentials
                key: user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: boutique-db-credentials
                key: password

      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
        args:
          - "--structured-logs"
          - "kims-boutique-472014:us-central1:boutique-db-instance"
        securityContext:
          runAsNonRoot: true