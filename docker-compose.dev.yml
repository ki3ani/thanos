version: '3.8'

services:
  frontend-proxy-dev:
    build:
      context: ./frontend-proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - TOOLBOX_SERVICE_HOST=mcp-toolbox-dev
      - TOOLBOX_SERVICE_PORT=8080
    volumes:
      - ./frontend-proxy:/app:ro
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
    depends_on:
      - mcp-toolbox-dev
    networks:
      - thanos-dev-network

  recommendation-agent-dev:
    build:
      context: ./recommendation-agent
      dockerfile: Dockerfile
    ports:
      - "8081:8080"  
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:-test-key}
    volumes:
      - ./recommendation-agent:/app:ro
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
    networks:
      - thanos-dev-network

  mcp-toolbox-dev:
    build:
      context: ./mcp-toolbox
      dockerfile: Dockerfile  
    ports:
      - "8082:8080"
    volumes:
      - ./mcp-toolbox/tools.yaml:/app/tools.yaml:ro
    networks:
      - thanos-dev-network

  ui-dev:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./ui:/usr/share/nginx/html:ro
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend-proxy-dev
      - recommendation-agent-dev
    networks:
      - thanos-dev-network

  # Redis for development caching/session storage
  redis-dev:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - thanos-dev-network

networks:
  thanos-dev-network:
    driver: bridge